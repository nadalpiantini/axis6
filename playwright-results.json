{
  "config": {
    "configFile": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/playwright.config.ts",
    "rootDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/global-setup.ts",
    "globalTeardown": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/global-teardown.ts",
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {},
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "playwright-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "playwright-results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "playwright-results.xml"
        }
      ],
      [
        "line",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {},
        "id": "iPad",
        "name": "iPad",
        "testDir": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.0",
    "workers": 5,
    "webServer": null
  },
  "suites": [],
  "errors": [
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 6,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:6\n\n  4 |   \n  5 |   test.describe('Dashboard Loading and Navigation', () => {\n> 6 |     test('should load dashboard correctly for authenticated user', async ({ authenticatedPage }) => {\n    |         ^\n  7 |       await authenticatedPage.verifyDashboardLoaded();\n  8 |       \n  9 |       // Check page title"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 16,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:16\n\n  14 |     });\n  15 |     \n> 16 |     test('should display user data correctly', async ({ authenticatedPage, testUser }) => {\n     |         ^\n  17 |       await authenticatedPage.verifyDashboardLoaded();\n  18 |       \n  19 |       // Should show user name or email somewhere"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 31,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:31\n\n  29 |     });\n  30 |     \n> 31 |     test('should handle dashboard data loading states', async ({ authenticatedPage }) => {\n     |         ^\n  32 |       // Navigate to dashboard\n  33 |       await authenticatedPage.goto('/dashboard');\n  34 |       "
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 48,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:48\n\n  46 |\n  47 |   test.describe('Hexagon Visualization', () => {\n> 48 |     test('should display hexagon chart correctly', async ({ authenticatedPage }) => {\n     |         ^\n  49 |       await authenticatedPage.verifyDashboardLoaded();\n  50 |       \n  51 |       const hexagon = authenticatedPage.hexagonChart;"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 67,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:67\n\n  65 |     });\n  66 |     \n> 67 |     test('should show all 6 categories in hexagon', async ({ authenticatedPage }) => {\n     |         ^\n  68 |       await authenticatedPage.verifyDashboardLoaded();\n  69 |       \n  70 |       // Look for category indicators in the hexagon"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 86,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:86\n\n  84 |     });\n  85 |     \n> 86 |     test('should be interactive and respond to clicks', async ({ authenticatedPage }) => {\n     |         ^\n  87 |       await authenticatedPage.verifyDashboardLoaded();\n  88 |       \n  89 |       // Find clickable elements in hexagon"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 106,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:106\n\n  104 |\n  105 |   test.describe('Daily Check-ins', () => {\n> 106 |     test('should allow user to perform daily check-ins', async ({ authenticatedPage }) => {\n      |         ^\n  107 |       await authenticatedPage.verifyDashboardLoaded();\n  108 |       \n  109 |       // Look for check-in buttons or cards"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 132,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:132\n\n  130 |     });\n  131 |     \n> 132 |     test('should show check-in status for each category', async ({ authenticatedPage }) => {\n      |         ^\n  133 |       await authenticatedPage.verifyDashboardLoaded();\n  134 |       \n  135 |       // Look for category cards with check-in status"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 152,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:152\n\n  150 |     });\n  151 |     \n> 152 |     test('should prevent duplicate check-ins for same day', async ({ authenticatedPage }) => {\n      |         ^\n  153 |       await authenticatedPage.verifyDashboardLoaded();\n  154 |       \n  155 |       // Find a check-in button and click it"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 174,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:174\n\n  172 |\n  173 |   test.describe('Streak Tracking', () => {\n> 174 |     test('should display streak information', async ({ authenticatedPage }) => {\n      |         ^\n  175 |       await authenticatedPage.verifyDashboardLoaded();\n  176 |       \n  177 |       // Look for streak counters or indicators"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 194,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:194\n\n  192 |     });\n  193 |     \n> 194 |     test('should update streaks after check-ins', async ({ authenticatedPage }) => {\n      |         ^\n  195 |       await authenticatedPage.verifyDashboardLoaded();\n  196 |       \n  197 |       // Get initial streak count"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 227,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:227\n\n  225 |\n  226 |   test.describe('Dashboard Responsiveness', () => {\n> 227 |     test('should adapt to mobile viewport', async ({ authenticatedPage }) => {\n      |         ^\n  228 |       // Set mobile viewport\n  229 |       await authenticatedPage.page.setViewportSize({ width: 375, height: 667 });\n  230 |       await authenticatedPage.verifyDashboardLoaded();"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 243,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:243\n\n  241 |     });\n  242 |     \n> 243 |     test('should work on tablet viewport', async ({ authenticatedPage }) => {\n      |         ^\n  244 |       // Set tablet viewport\n  245 |       await authenticatedPage.page.setViewportSize({ width: 768, height: 1024 });\n  246 |       await authenticatedPage.verifyDashboardLoaded();"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 259,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:259\n\n  257 |     });\n  258 |     \n> 259 |     test('should handle different screen orientations', async ({ authenticatedPage }) => {\n      |         ^\n  260 |       // Portrait\n  261 |       await authenticatedPage.page.setViewportSize({ width: 375, height: 812 });\n  262 |       await authenticatedPage.verifyDashboardLoaded();"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 273,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:273\n\n  271 |\n  272 |   test.describe('Error Handling', () => {\n> 273 |     test('should handle API errors gracefully', async ({ authenticatedPage }) => {\n      |         ^\n  274 |       // Intercept API calls and simulate errors\n  275 |       await authenticatedPage.page.route('**/api/**', route => {\n  276 |         route.fulfill({"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 298,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:298\n\n  296 |     });\n  297 |     \n> 298 |     test('should handle slow network conditions', async ({ authenticatedPage }) => {\n      |         ^\n  299 |       // Simulate slow network\n  300 |       await authenticatedPage.page.route('**/api/**', async route => {\n  301 |         await new Promise(resolve => setTimeout(resolve, 3000)); // 3s delay"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 324,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:324\n\n  322 |\n  323 |   test.describe('Data Persistence', () => {\n> 324 |     test('should persist check-in data across sessions', async ({ authenticatedPage, page, testUser }) => {\n      |         ^\n  325 |       await authenticatedPage.verifyDashboardLoaded();\n  326 |       \n  327 |       // Perform a check-in if possible"
    },
    {
      "message": "Test has unknown parameter \"authenticatedPage\".",
      "location": {
        "file": "/Users/nadalpiantini/Dev/axis6-mvp/axis6/tests/e2e/dashboard.spec.ts",
        "line": 357,
        "column": 9
      },
      "snippet": "\u001b[90m   at \u001b[39mdashboard.spec.ts:357\n\n  355 |     });\n  356 |     \n> 357 |     test('should maintain UI state during page refresh', async ({ authenticatedPage }) => {\n      |         ^\n  358 |       await authenticatedPage.verifyDashboardLoaded();\n  359 |       \n  360 |       // Get current state"
    }
  ],
  "stats": {
    "startTime": "2025-08-26T13:03:30.620Z",
    "duration": 1818.935,
    "expected": 0,
    "skipped": 0,
    "unexpected": 0,
    "flaky": 0
  }
}